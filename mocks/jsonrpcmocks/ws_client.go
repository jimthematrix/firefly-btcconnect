// Code generated by mockery v1.0.0. DO NOT EDIT.

package jsonrpcmocks

import mock "github.com/stretchr/testify/mock"

// WsClient is an autogenerated mock type for the WsClient type
type WsClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *WsClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadMessage provides a mock function with given fields:
func (_m *WsClient) ReadMessage() (int, []byte, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 []byte
	if rf, ok := ret.Get(1).(func() []byte); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]byte)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// WriteMessage provides a mock function with given fields: messageType, data
func (_m *WsClient) WriteMessage(messageType int, data []byte) error {
	ret := _m.Called(messageType, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, []byte) error); ok {
		r0 = rf(messageType, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
