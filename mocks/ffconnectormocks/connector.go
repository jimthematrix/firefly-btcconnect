// Code generated by mockery v1.0.0. DO NOT EDIT.

package ffconnectormocks

import (
	context "context"

	config "github.com/hyperledger/firefly-common/pkg/config"

	ffcapi "github.com/hyperledger/firefly-common/pkg/ffcapi"

	ffconnector "github.com/hyperledger/firefly-btcconnect/internal/ffconnector"

	mock "github.com/stretchr/testify/mock"
)

// Connector is an autogenerated mock type for the Connector type
type Connector struct {
	mock.Mock
}

// HandlerMap provides a mock function with given fields:
func (_m *Connector) HandlerMap() map[ffcapi.RequestType]ffconnector.FFCHandler {
	ret := _m.Called()

	var r0 map[ffcapi.RequestType]ffconnector.FFCHandler
	if rf, ok := ret.Get(0).(func() map[ffcapi.RequestType]ffconnector.FFCHandler); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[ffcapi.RequestType]ffconnector.FFCHandler)
		}
	}

	return r0
}

// Init provides a mock function with given fields: ctx, conf
func (_m *Connector) Init(ctx context.Context, conf config.Section) error {
	ret := _m.Called(ctx, conf)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, config.Section) error); ok {
		r0 = rf(ctx, conf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
